{"ast":null,"code":"import _slicedToArray from \"/home/lior/work/blackjack-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lior/work/blackjack-react-app/src/components/Controls.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './styles/Controls.module.css';\n\nconst Controls = ({\n  balance,\n  gameState,\n  buttonState,\n  betEvent,\n  hitEvent,\n  standEvent,\n  resetEvent\n}) => {\n  const _useState = useState(10),\n        _useState2 = _slicedToArray(_useState, 2),\n        amount = _useState2[0],\n        setAmount = _useState2[1];\n\n  const _useState3 = useState(styles.input),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputStyle = _useState4[0],\n        setInputStyle = _useState4[1];\n\n  useEffect(() => {\n    validation();\n  }, [amount, balance]);\n\n  const validation = () => {\n    if (amount > balance) {\n      setInputStyle(styles.inputError);\n      return false;\n    }\n\n    if (amount < 0.01) {\n      setInputStyle(styles.inputError);\n      return false;\n    }\n\n    setInputStyle(styles.input);\n    return true;\n  };\n\n  const amountChange = e => {\n    setAmount(e.target.value);\n  };\n\n  const onBetClick = () => {\n    if (validation()) {\n      betEvent(Math.round(amount * 100) / 100);\n    }\n  };\n\n  const getControls = () => {\n    if (gameState === 0) {\n      return React.createElement(\"div\", {\n        className: styles.controlsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.betContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Amount:\"), React.createElement(\"input\", {\n        autoFocus: true,\n        type: \"number\",\n        value: amount,\n        onChange: amountChange,\n        className: inputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: () => onBetClick(),\n        className: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Bet\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: styles.controlsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => hitEvent(),\n        disabled: buttonState.hitDisabled,\n        className: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Hit\"), React.createElement(\"button\", {\n        onClick: () => standEvent(),\n        disabled: buttonState.standDisabled,\n        className: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Stand\"), React.createElement(\"button\", {\n        onClick: () => resetEvent(),\n        disabled: buttonState.resetDisabled,\n        className: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, getControls());\n};\n\nexport default Controls;","map":{"version":3,"sources":["/home/lior/work/blackjack-react-app/src/components/Controls.tsx"],"names":["React","useState","useEffect","styles","Controls","balance","gameState","buttonState","betEvent","hitEvent","standEvent","resetEvent","amount","setAmount","input","inputStyle","setInputStyle","validation","inputError","amountChange","e","target","value","onBetClick","Math","round","getControls","controlsContainer","betContainer","button","hitDisabled","standDisabled","resetDisabled"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './styles/Controls.module.css';\n\ntype ControlsProps = {\n  balance: number,\n  gameState: number,\n  buttonState: any,\n  betEvent: any,\n  hitEvent: any,\n  standEvent: any,\n  resetEvent: any\n};\n\nconst Controls: React.FC<ControlsProps> = ({ balance, gameState, buttonState, betEvent, hitEvent, standEvent, resetEvent }) => {\n  const [amount, setAmount] = useState(10);\n  const [inputStyle, setInputStyle] = useState(styles.input);\n\n  useEffect(() => {\n    validation();\n  }, [amount, balance]);\n\n  const validation = () => {\n    if (amount > balance) {\n      setInputStyle(styles.inputError);\n      return false;\n    }\n    if (amount < 0.01) {\n      setInputStyle(styles.inputError);\n      return false;\n    }\n    setInputStyle(styles.input);\n    return true;\n  }\n\n  const amountChange = (e: any) => {\n    setAmount(e.target.value);\n  }\n\n  const onBetClick = () => {\n    if (validation()) {\n      betEvent(Math.round(amount * 100) / 100);\n    }\n  }\n\n  const getControls = () => {\n    if (gameState === 0) {\n      return (\n        <div className={styles.controlsContainer}>\n          <div className={styles.betContainer}>\n            <h4>Amount:</h4>\n            <input autoFocus type='number' value={amount} onChange={amountChange} className={inputStyle} />\n          </div>\n          <button onClick={() => onBetClick()} className={styles.button}>Bet</button>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className={styles.controlsContainer}>\n          <button onClick={() => hitEvent()} disabled={buttonState.hitDisabled} className={styles.button}>Hit</button>\n          <button onClick={() => standEvent()} disabled={buttonState.standDisabled} className={styles.button}>Stand</button>\n          <button onClick={() => resetEvent()} disabled={buttonState.resetDisabled} className={styles.button}>Reset</button>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <>\n      {getControls()}\n    </>\n  );\n}\n\nexport default Controls;"]},"metadata":{},"sourceType":"module"}