{"ast":null,"code":"var _jsxFileName = \"/home/lior/work/blackjack-react-app/src/components/Hand.tsx\";\nimport React from 'react';\nimport styles from './styles/Hand.module.css';\nimport Card from './Card';\n\nconst Hand = ({\n  title,\n  cards\n}) => {\n  const getEmptyCard = () => {\n    if (cards.length === 0) {\n      return React.createElement(Card, {\n        key: 0,\n        value: \"K\",\n        suit: '♠',\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: styles.handContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: styles.cardContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, getEmptyCard(), getEmptyCard(), cards.map((card, index) => {\n    return React.createElement(Card, {\n      key: index,\n      value: card.value,\n      suit: card.suit,\n      hidden: card.hidden,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default Hand;","map":{"version":3,"sources":["/home/lior/work/blackjack-react-app/src/components/Hand.tsx"],"names":["React","styles","Card","Hand","title","cards","getEmptyCard","length","handContainer","cardContainer","map","card","index","value","suit","hidden"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAQA,MAAMC,IAAyB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AACtD,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACtB,aACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAE,CAAX;AAAc,QAAA,KAAK,EAAE,GAArB;AAA0B,QAAA,IAAI,EAAE,GAAhC;AAAqC,QAAA,MAAM,EAAE,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AACF,GAND;;AAQA,SACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEP,MAAM,CAACG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CADF,EAEE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACQ,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,YAAY,EADf,EAEGA,YAAY,EAFf,EAGGD,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAYC,KAAZ,KAA8B;AACvC,WACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,KAAK,EAAED,IAAI,CAACE,KAA9B;AAAqC,MAAA,IAAI,EAAEF,IAAI,CAACG,IAAhD;AAAsD,MAAA,MAAM,EAAEH,IAAI,CAACI,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJA,CAHH,CAFF,CADF;AAcD,CAvBD;;AAyBA,eAAeZ,IAAf","sourcesContent":["import React from 'react';\nimport styles from './styles/Hand.module.css';\nimport Card from './Card';\nimport { getConfigFileParsingDiagnostics } from 'typescript';\n\ntype HandProps = {\n  title: string,\n  cards: any[]\n};\n\nconst Hand: React.FC<HandProps> = ({ title, cards }) => {\n  const getEmptyCard = () => {\n    if (cards.length === 0) {\n      return (\n        <Card key={0} value={\"K\"} suit={'♠'} hidden={true}/>\n      );\n    }\n  }\n\n  return (\n    <div className={styles.handContainer}>\n      <h1 className={styles.title}>{title}</h1>\n      <div className={styles.cardContainer}>\n        {getEmptyCard()}\n        {getEmptyCard()}\n        {cards.map((card: any, index: number) => {\n          return (\n            <Card key={index} value={card.value} suit={card.suit} hidden={card.hidden} />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Hand;"]},"metadata":{},"sourceType":"module"}